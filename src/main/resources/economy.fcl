// Block definition (there may be more than one block per file)
// these numbers are placeholders, may way to use functions of some kind
FUNCTION_BLOCK economy

// Define input variables
VAR_INPUT
    publicBalance : REAL;
    govtBalance : REAL;
    og : REAL;
    balanceNeutral, balanceHigh, spendingNeutral, spendingHigh, ogLow, ogHigh: Real;
END_VAR

// Define output variable
VAR_OUTPUT
    publicSpending : REAL;
    govtSpending : REAL;
END_VAR

FUZZIFY publicBalance
    TERM debt := (-balanceHigh, 1.0) (-balanceNeutral, 0.0);
    TERM neutral := (-balanceHigh, 0.0) (-balanceNeutral, 1.0) (balanceNeutral, 1.0) (balanceHigh, 0.0);
    TERM reserve := (balanceNeutral, 0.0) (balanceHigh, 1.0);
END_FUZZIFY

FUZZIFY govtBalance
    TERM debt := (-balanceHigh, 1.0) (-balanceNeutral, 0.0);
    TERM neutral := (-balanceHigh, 0.0) (-balanceNeutral, 1.0) (balanceNeutral, 1.0) (balanceHigh, 0.0);
    TERM reserve := (balanceNeutral, 0.0) (balanceHigh, 1.0);
END_FUZZIFY

FUZZIFY growth
    TERM low := (0.0, 1.0) (1.0, 1.0) (2.0, 0.0);
    TERM medium := (2.0, 0.0 (3.0, 1.0) (4.0, 1.0) (5.0, 0.0);
    TERM high := (4.0, 0.0) (5.0, 1.0);
END_FUZZIFY

FUZZIFY og
    TERM negative := (-ogHigh, 1.0) (-ogLow, 0.0);
    TERM correct := (-ogHigh, 0.0) (-ogLow, 1.0) (ogLow, 1.0) (ogHigh, 0.0);
    TERM positive := (ogLow, 0.0) (ogHigh, 1.0);
END_FUZZIFY

DEFUZZIFY publicSpending
    TERM deficit := (-spendingHigh, 1) (-spendingNeutral, 0);
    TERM neutral := (-spendingHigh,0) (0,1) (spendingNeutral,0);
    TERM surplus := (spendingNeutral, 0) (spendingHigh, 1);
    METHOD : COG;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

DEFUZZIFY govtSpending
    TERM deficit := (-spendingHigh, 1) (-spendingNeutral, 0);
    TERM neutral := (-spendingHigh,0) (0,1) (spendingNeutral,0);
    TERM surplus := (spendingNeutral, 0) (spendingHigh, 1);
    METHOD : COG;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
// Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF govtBalance IS reserve OR
    (og IS negative AND govtBalance IS neutral)
    THEN govtSpending IS deficit

    RULE 2 : IF govtBalance IS neutral OR
    og IS correct OR
    (og IS negative AND govtBalance IS negative) OR
    (og IS negative AND govtBalance IS negative)
    THEN govtSpending IS neutral

    RULE 3 : IF govtBalance IS debt OR
    (og IS positive AND govtBalance IS neutral)
    THEN govtSpending IS surplus
END_RULEBLOCK

RULEBLOCK No2
// Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF publicBalance IS reserve OR
    (og IS negative AND publicBalance IS neutral)
    THEN publicSpending IS deficit

    RULE 2 : IF publicBalance IS neutral OR
    og IS correct OR
    (og IS negative AND publicBalance IS negative) OR
    (og IS negative AND publicBalance IS negative)
    THEN publicSpending IS neutral

    RULE 3 : IF publicBalance IS debt OR
    (og IS positive AND publicBalance IS neutral)
    THEN publicSpending IS surplus
END_RULEBLOCK

END_FUNCTION_BLOCK